name: build

on:
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
          
      - name: Docker
        run: |
          docker build --tag hosts:hostz .
          docker run -v "/var/run/docker.sock":"/var/run/docker.sock" --name hosts-hostz --entrypoint=/hosts/entrypoint.sh hosts:hostz
          docker cp hosts-hostz:hosts/build/hosts ./build/hosts
          
      - name: commit
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git add .
          git commit --allow-empty -m "$(git log -1 --pretty=%s)"
          git push
  push:
    needs: build
    runs-on: ubuntu-latest
    env:
      SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
      USER_NAME: ${{ secrets.USER_NAME }}
      DEST_REPO: ${{ secrets.DEST_REPO }}
      USER_EMAIL: ${{ secrets.USER_EMAIL }}
      GITHUB_SERVER: github.com
      TARGET_DIRECTORY: ''
      SOURCE_DIRECTORY: build
      TARGET_BRANCH: master
      COMMIT_MESSAGE: ${COMMIT_MESSAGE}
      
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: push
        run: |
          mkdir --parents "$HOME/.ssh"
          DEPLOY_KEY_FILE="$HOME/.ssh/deploy_key"
          echo "${SSH_DEPLOY_KEY}" > "$DEPLOY_KEY_FILE"
          chmod 600 "$DEPLOY_KEY_FILE"
          
          SSH_KNOWN_HOSTS_FILE="$HOME/.ssh/known_hosts"
          ssh-keyscan -H "$GITHUB_SERVER" > "$SSH_KNOWN_HOSTS_FILE"
          
          export GIT_SSH_COMMAND="ssh -i "$DEPLOY_KEY_FILE" -o UserKnownHostsFile=$SSH_KNOWN_HOSTS_FILE"
          
          GIT_CMD_REPOSITORY="git@$GITHUB_SERVER:$USER_NAME/$DEST_REPO.git"
          
          
          CLONE_DIR=$(mktemp -d)
          
          git --version
          git lfs install
          git config --global user.email "$USER_EMAIL"
          git config --global user.name "$USER_NAME"
          git config --global http.version HTTP/1.1
          
          git clone --single-branch --depth 1 "$GIT_CMD_REPOSITORY" "$CLONE_DIR"
          ls -la "$CLONE_DIR"
          
          
          TEMP_DIR=$(mktemp -d)
          mv "$CLONE_DIR/.git" "$TEMP_DIR/.git"
          
          ABSOLUTE_TARGET_DIRECTORY="$CLONE_DIR/$TARGET_DIRECTORY/"
          rm -rf "$ABSOLUTE_TARGET_DIRECTORY"
          mkdir -p "$ABSOLUTE_TARGET_DIRECTORY"
          ls -al
          ls -al /
          
          mv "$TEMP_DIR/.git" "$CLONE_DIR/.git"
          
          ls "$SOURCE_DIRECTORY"
          cp -ra "$SOURCE_DIRECTORY"/. "$CLONE_DIR/$TARGET_DIRECTORY"
          cd "$CLONE_DIR"
          ls -la
          
          COMMIT_MESSAGE="$(date "+%Y%m%d-%H%M")"
          
          git config --global --add safe.directory "$CLONE_DIR"
          git add .
          git status
          git diff-index --quiet HEAD || git commit --message "$COMMIT_MESSAGE"
          git push "$GIT_CMD_REPOSITORY" --set-upstream "$TARGET_BRANCH"
          
